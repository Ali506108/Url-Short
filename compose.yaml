version: '3.8'
services:
  redis:
    image: 'redis:latest'
    ports:
      - "6379:6379"
    command: ["redis-server", "--requirepass", "root"]
    networks:
      - kafka-net


  mongodb:
    image: 'mongo:latest'
    environment:
      - 'MONGO_INITDB_DATABASE=mongo'
      - 'MONGO_INITDB_ROOT_PASSWORD=root'
      - 'MONGO_INITDB_ROOT_USERNAME=root'
    ports:
      - "27017:27017"

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka-net

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

      KAFKA_CREATE_TOPICS: "url-event-topic:1:1,dlq-url-topic:1:1"

    networks:
      - kafka-net

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"

  jaeger:
    image: jaegertracing/all-in-one:1.53
    ports:
      - "16686:16686"   # UI
      - "14250:14250"   # gRPC


networks:
  kafka-net:
    driver: bridge
